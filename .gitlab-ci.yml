variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: $CI_COMMIT_REF_SLUG
  IMAGE_NAME_AND_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  APP_NAME: transcriber
  APP_NAMESPACE: transcriber

stages:
  - test
  - build
  - deploy


tests:
  stage: test
  image: python:3.10.17-slim-bookworm
  before_script:
    - apt-get update && apt-get install -y gcc libpq-dev python3-dev
    - pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - pytest app/tests/test_services.py -v -s
  rules:
    - exists:
        - app/tests/test_services.py


docker-build:
  stage: build
  image: docker:28.2.2-cli-alpine3.21
  services:
    - docker:28.2.2-alpine3.21
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - docker build --pull -t "$IMAGE_NAME_AND_TAG" .
    - docker push "$IMAGE_NAME_AND_TAG"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$IMAGE_NAME_AND_TAG" "$IMAGE_NAME:latest"
        docker push "$IMAGE_NAME:latest"
      fi
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "ci"
      exists:
        - Dockerfile


deploy:
  stage: deploy
  image: alpine:3.21
  before_script:
    - apk add --no-cache openssh
    - chmod 400 "$SSH_PRIVATE_KEY"
  script:
    - |
      ssh root@$SSH_HOST -i "$SSH_PRIVATE_KEY" -o StrictHostKeyChecking=no "
        export KUBECONFIG=/etc/rancher/k3s/k3s.yaml &&
        cd /root/k8s/transcriber/helm/ &&

        kubectl create secret generic $APP_NAME-secret \
          --from-literal=SECRET_KEY='$SECRET_KEY' \
          -n $APP_NAMESPACE --dry-run=client -o yaml | kubectl apply -f - &&

        # Создаём или обновляем секрет из переменных окружения GitLab CI
        kubectl create secret generic postgres-secret \
          --from-literal=POSTGRES_USER='$DB_USER' \
          --from-literal=POSTGRES_PASSWORD='$DB_PASSWORD' \
          --from-literal=POSTGRES_DB='$DB_NAME' \
          -n $APP_NAMESPACE --dry-run=client -o yaml | kubectl apply -f - &&

        helm upgrade --install \
          $APP_NAME \
          . \
          -n $APP_NAMESPACE \
          --create-namespace \
          --values values.yaml \
          --set app.image.repository=$CI_REGISTRY_IMAGE \
          --set app.image.tag=$CI_COMMIT_REF_SLUG
      "
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "ci"




